{"version":3,"file":"static/js/231.bbaeb36b.chunk.js","mappings":"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","sources":["components/Chart/Chart.styled.js","utils/serviceFunctions.js","components/Chart/Chart.jsx","components/Table/filterMonth.js","components/Table/filterYear.js","components/Table/Table.styled.js","components/Table/basicTable.js","components/Table/Table.jsx","redux/summary/summarySelectors.js","components/DiagramTab/DiagramTab.styled.js","components/DiagramTab/colorMap.js","components/DiagramTab/serviceFunctions.js","components/DiagramTab/DiagramTab.jsx","pages/SummaryPage/SummaryPage.jsx","redux/categories/categoriesSelectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledChartContainer = styled.div`\n  position: relative;\n  width: 280px;\n  height: 280px;\n  margin: 0 auto;\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    height: 336px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 288px;\n    height: 288px;\n  }\n`;\n\nexport const TotalBalance = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.2;\n  color: #000000;\n\n  @media screen and (min-width: 768px) {\n    transform: translate(-50%, -140%);\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n    transform: translate(-50%, -50%);\n  }\n`;\n","export function formatNumber(number) {\n  const formattedNumber = Math.abs(number).toLocaleString('ru-RU', {minimumFractionDigits: 2, maximumFractionDigits: 2, useGrouping: true});\n  const [integerPart, fractionalPart] = formattedNumber.split(\",\");\n  return `${integerPart}.${fractionalPart}`;\n}\n\nexport function formatNumberSaveMinus(number) {\n  const formattedNumber = number.toLocaleString('ru-RU', {minimumFractionDigits: 2, maximumFractionDigits: 2, useGrouping: true});\n  const [integerPart, fractionalPart] = formattedNumber.split(\",\");\n  return `${integerPart}.${fractionalPart}`;}\n\nexport const formatBalance = (balance) => {\n  return `&#8372; ${formatNumberSaveMinus(balance)}`;\n};\n","import React, { useMemo, useRef } from 'react';\nimport { StyledChartContainer, TotalBalance } from './Chart.styled';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useSelector } from 'react-redux';\nimport { selectTotalBalance } from 'redux/transaction/transactionSelectors';\nimport { formatBalance } from 'utils/serviceFunctions';\nimport PropTypes from 'prop-types';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst options = {\n  plugins: {\n    legend: {\n      display: false,\n    },\n  },\n  cutout: 95,\n};\n\nexport const ChartDoughnut = React.memo(({ data }) => {\n  console.log('Donut', data)\n  const userBalance = useSelector(selectTotalBalance);\n  const chartRef = useRef(null);\n\n  const dataChart = useMemo(() => {\n    if (data && data.length > 0) {\n      const labels = data.map(item => item.name);\n      const values = data.map(item => Math.abs(item.total));\n      const color = data.map(item => item.color);\n\n      return {\n        labels,\n        datasets: [\n          {\n            data: values,\n            backgroundColor: color,\n            borderWidth: 1,\n            hoverOffset: 1,\n          },\n        ],\n      };\n    } else {\n      return {\n        labels: ['No expenses'],\n        datasets: [\n          {\n            label: '',\n            data: [1],\n            backgroundColor: ['rgb(230, 225, 213)'],\n            hoverOffset: 4,\n          },\n        ],\n      };\n    }\n  }, [data]);\n\n  const totalBalance = useMemo(() => {\n    return formatBalance(userBalance);\n  }, [userBalance]);\n\n  return (\n    <StyledChartContainer>\n      <Doughnut data={dataChart} options={options} ref={chartRef} />\n\n      <TotalBalance dangerouslySetInnerHTML={{ __html: totalBalance }} />\n    </StyledChartContainer>\n  );\n});\n\nChartDoughnut.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      total: PropTypes.number.isRequired,\n      color: PropTypes.string.isRequired\n    })\n  ).isRequired\n};","import { Autocomplete, TextField } from '@mui/material';\nimport React, { useMemo } from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst options = [\n  { label: 'January', id: 1 },\n  { label: 'February', id: 2 },\n  { label: 'March', id: 3 },\n  { label: 'April', id: 4 },\n  { label: 'May', id: 5 },\n  { label: 'June', id: 6 },\n  { label: 'July', id: 7 },\n  { label: 'August', id: 8 },\n  { label: 'September', id: 9 },\n  { label: 'October', id: 10 },\n  { label: 'November', id: 11 },\n  { label: 'December', id: 12 },\n];\n\nexport const FilterMonth = ({ getMonth }) => {\n  const currentMonth = useMemo(() => {\n    return options.find(option => option.id === new Date().getMonth() + 1)\n      .label;\n  }, []);\n\n  const handleMonthChange = selectedOption => {\n    if (selectedOption) {\n      getMonth(selectedOption.id);\n    }\n  };\n\n  return (\n    <Autocomplete\n      sx={[\n        { width: 181 },\n        { height: 50 },\n        { borderRadius: 30 },\n        {\n          '& .MuiOutlinedInput-root': {\n            borderRadius: 30,\n          },\n          '& .MuiInputBase-input': {\n            fontFamily: 'Circe',\n          },\n          '& .MuiAutocomplete-paper': {\n            background: 'rgba(255, 255, 255, 0.7)',\n            boxShadow: '0px 6px 15px rgba(0, 0, 0, 0.1)',\n            borderRadius: '20px',\n            backdropFilter: 'blur(25px)',\n          },\n          '& .MuiAutocomplete-option': {\n            fontFamily: 'Circe',\n            borderRadius: '30px',\n          },\n          '& .MuiAutocomplete-listbox': {\n            borderRadius: '20px',\n            fontFamily: 'Circe',\n          },\n        },\n      ]}\n\n      id=\"filter-month-autocomplete\"\n      options={options}\n      onChange={(_, selectedOption) => handleMonthChange(selectedOption)}\n      isOptionEqualToValue={(option, value) => option.id === value.id}\n      renderInput={params => (\n        <TextField\n          {...params}\n          label={currentMonth}\n          sx={{ borderColor: 'transparent' }}\n        />\n      )}\n    />\n  );\n};\n\nFilterMonth.propTypes = {\n  getMonth: PropTypes.func.isRequired,\n};\n","import { TextField, Autocomplete } from '@mui/material';\nimport React, { useMemo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nconst options = [\n  { label: '2019', id: 1 },\n  { label: '2020', id: 2 },\n  { label: '2021', id: 3 },\n  { label: '2022', id: 4 },\n  { label: '2023', id: 5 },\n];\n\nexport const FilterYear = ({ getYear }) => {\n  const currentYear = useMemo(\n    () => new Date().toLocaleString('default', { year: 'numeric' }),\n    []\n  );\n\n  const handleYearChange = useCallback(\n    selectedOption => {\n      if (selectedOption) {\n        getYear(selectedOption.label);\n      }\n    },\n    [getYear]\n  );\n\n  return (\n    <Autocomplete\n      sx={[\n        { width: 181 },\n        { height: 50 },\n        { borderRadius: 30 },\n        {\n          '& .MuiOutlinedInput-root': {\n            borderRadius: 30,\n          },\n          '& .MuiInputBase-input': {},\n          '& .MuiAutocomplete-paper': {\n            background: 'rgba(255, 255, 255, 0.7)',\n            boxShadow: '0px 6px 15px rgba(0, 0, 0, 0.1)',\n            borderRadius: '20px',\n            backdropFilter: 'blur(25px)',\n          },\n          '& .MuiAutocomplete-listbox': {\n            borderRadius: '20px',\n            fontFamily: 'Circe',\n          },\n        },\n      ]}\n\n      id=\"filter-year-autocomplete\"\n      options={options}\n      onChange={(_, selectedOption) => handleYearChange(selectedOption)}\n      isOptionEqualToValue={(option, value) => option.id === value.id}\n      renderInput={params => (\n        <TextField\n          {...params}\n          label={currentYear}\n          variant=\"outlined\"\n          sx={{\n            borderRadius: 30,\n          }}\n        />\n      )}\n    />\n  );\n};\n\nFilterYear.propTypes = {\n  getYear: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  width: 100%;\n  height: 100vh;\n  margin: 0 auto;\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    margin: 0;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 395px;\n    margin: 0;\n  }\n`;\nexport const FiltersBox = styled.div`\n  display: flex;\n  width: auto;\n  height: auto;\n  margin: 0 auto;\n  gap: 20px;\n  mix-blend-mode: 20px;\n  margin-bottom: 20px;\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    gap: 16px;\n    flex-direction: row;\n  }\n  @media screen and (min-width: 1280px) {\n    gap: 32px;\n    flex-direction: row;\n    width: 395px;\n  }\n`;\n\nexport const RoundedBox = styled(Box)({\n  borderRadius: '30px',\n  overflow: 'hidden',\n  width: '280px',\n  height: '50px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: '#fffff',\n  border: '1px solid #000000',\n  '@media (min-width: 768px)': {\n    width: '160px',\n  },\n  '@media (min-width: 1280px)': {\n    width: '152px',\n  },\n});\n\nexport const TotalBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 16px;\n  padding: 0 20px;\n`;\n\nexport const TotalItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  /* gap: 153px; */\n  font-size: 16px;\n  font-weight: 700;\n  margin-bottom: 14px;\n`;\nexport const TotalExpenses = styled.div`\n  color: #ff6596;\n`;\nexport const TotalIncom = styled.div`\n  color: #24cca7;\n`;\nexport const CategoryBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: var(--main-background-color);\n  border-radius: 30px;\n  width: 100%;\n  height: 58px;\n  background-color: var(--form-background-color);\n`;\nexport const ItemTitle = styled.div`\n  padding: 20px;\n  font-size: 18px;\n  font-weight: 700;\n`;\n// Color box styled by props color from tableData\nexport const ColorBox = styled.div`\n  width: 24px;\n  height: 24px;\n  border-radius: 2px;\n  /* margin-left: 8px; */\n  background-color: ${props => props.backgroundColor};\n`;\n\nexport const borderStyle = {\n  backgroundColor: 'transparent',\n  border: 'none',\n};\n\nexport const tableStyle = {\n  backgroundColor: 'transparent',\n  border: 'none',\n  borderRadius: 'none',\n  boxShadow: 'none',\n};\nexport const rowStyle = {\n  // padding: '0px',\n  // border: 'none',\n};\n\nexport const cellStyle = {\n  borderBottom: '1px solid #DCDCDF',\n  // borderTop: '1px solid #fff',\n  width: '100px',\n  padding: '14px',\n  paddingLeft: '0px',\n};\n\nexport const cellColorStyle = {\n  borderBottom: '1px solid #DCDCDF',\n  // borderTop: '1px solid #fff',\n  width: '10px',\n  margin: '0px',\n  padding: '10px',\n};\n","import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport {ColorBox, tableStyle, rowStyle, cellStyle, cellColorStyle} from './Table.styled';\nimport { formatNumber } from 'utils/serviceFunctions';\nimport PropTypes from 'prop-types';\n\nexport const BasicTable = ({tableData}) => {\n\n  return (\n    <TableContainer component={Paper} style={tableStyle}>\n      <Table sx={{ maxWidth: 650, border: 0 }} >\n        <TableBody >\n          {tableData.map(({name, total, color}) => (\n            <TableRow style={rowStyle}\n              key={name}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell style={cellColorStyle}>\n                <ColorBox backgroundColor={color}></ColorBox>\n              </TableCell>\n              <TableCell style={cellStyle} align=\"left\">{name}</TableCell>\n              <TableCell style={cellStyle} align=\"right\">{formatNumber(total)}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nBasicTable.propTypes = {\n  tableData: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    total: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n  })),\n};","import React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport { FilterMonth } from 'components/Table/filterMonth';\nimport { FilterYear } from './filterYear';\nimport { BasicTable } from './basicTable';\nimport {\n  Box,\n  FiltersBox,\n  CategoryBox,\n  ItemTitle,\n  TotalBox,\n  TotalItem,\n  TotalExpenses,\n  TotalIncom,\n} from './Table.styled';\nimport { formatNumber } from 'utils/serviceFunctions';\nimport { Empty } from 'antd';\nimport { Rings } from 'react-loader-spinner';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/categories/categoriesSelectors';\nimport PropTypes from 'prop-types';\n\n\nexport const Table = ({ data, handlePeriod }) => {\n  console.log(data)\n  const isDataPerPeriod =\n    !data?.expenseSummary === 0 || data?.categoriesSummary?.length > 0;\n\n  const isLoading = useSelector(selectIsLoading);\n\n  const currentMonth = useMemo(() => new Date().getMonth() + 1, []);\n  const currentYear = useMemo(() => new Date().getFullYear(), []);\n\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [selectedYear, setSelectedYear] = useState('');\n\n  const handleMonth = useCallback(month => {\n    setSelectedMonth(month);\n  }, []);\n\n  const handleYear = useCallback(year => {\n    setSelectedYear(year);\n  }, []);\n\n  useEffect(() => {\n    if (selectedMonth && selectedYear)\n      handlePeriod(selectedMonth, selectedYear);\n    if (selectedMonth && !selectedYear)\n      handlePeriod(selectedMonth, currentYear);\n    if (!selectedMonth && selectedYear)\n      handlePeriod(currentMonth, selectedYear);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedMonth, selectedYear]);\n\n  return (\n    <Box>\n      <FiltersBox>\n        <FilterMonth getMonth={handleMonth} />\n        <FilterYear getYear={handleYear} />\n      </FiltersBox>\n\n      <CategoryBox>\n        <ItemTitle>Category</ItemTitle> <ItemTitle>Sum</ItemTitle>\n      </CategoryBox>\n      {/* Spinner when loading */}\n      {isLoading && (\n        <Rings\n          height=\"80\"\n          width=\"80\"\n          color=\"#4fa94d\"\n          radius=\"6\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n          ariaLabel=\"rings-loading\"\n        />\n      )}\n\n      {isDataPerPeriod && <BasicTable tableData={data.categoriesSummary} />}\n      {!isDataPerPeriod && <Empty />}\n\n      <TotalBox>\n        <TotalItem>\n          <p>Expenses: </p>\n          <TotalExpenses>{formatNumber(data.expenseSummary)}</TotalExpenses>\n        </TotalItem>\n        <TotalItem>\n          <p>Income: </p>{' '}\n          <TotalIncom>{formatNumber(data.incomeSummary)}</TotalIncom>\n        </TotalItem>\n      </TotalBox>\n    </Box>\n  );\n};\n\n\nTable.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    expenseSummary: PropTypes.number.isRequired,\n    incomeSummary: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    periodTotal: PropTypes.number.isRequired,\n    categoriesSummary: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        total: PropTypes.number.isRequired,\n        color: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n  })).isRequired,\n  handlePeriod: PropTypes.func.isRequired,\n};","export const selectSummary = state => state.summary.summaryData;\nexport const selectIsLoadind = state => state.summary.isLoading;\nexport const selectError = state => state.summary.error;","import styled from 'styled-components';\n\nexport const Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  background: 'transparent';\n  gap: 5px;\n  padding: 43px 0 48px 0;\n\n  @media screen and (min-width: 768px) {\n    padding: 0 0 24px 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 715px;\n    padding: 0px 0 47px 69px;\n  }\n`;\nexport const Box = styled.section`\n  /* max-height: 676px; */\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  @media screen and (min-width: 480px) {\n    width: 440px;\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 100%;\n  }\n`;\n\nexport const StatisticsTitle = styled.h2`\n  font-family: var(--secondary-font);\n  font-size: 30px;\n  font-weight: 400;\n  line-height: 1.2;\n  color: var(--title-main-color);\n  margin-bottom: 8px;\n  /* margin-left: 20px;\n  margin-top: 40px; */\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 20px;\n    /* margin-left: 32px;\n    margin-top: 32px; */\n  }\n\n  @media screen and (min-width: 1280px) {\n    /* display: none; */\n    /* margin-bottom: 20px; */\n    margin-left: 20px;\n    margin-top: 32px;\n  }\n`;\n","export const colorMap = {\n  Main: '#FED057',\n  Car: '#FD9498',\n  'Child care': '#6E78E8',\n  'Self care': '#C5BAFF',\n  'Household products': '#4A56E2',\n  Education: '#81E1FF',\n  Leisure: '#24CCA7',\n  'Other expenses': '#00AD84',\n  'Main expenses': '#eba597',\n  Products: '#6973e6',\n  Entertainment: '#53daba',\n};\n","export const deleteIncomeInArray = (array) => {\n  const filteredArray = array.filter(category => category.type !== 'INCOME');\n  return filteredArray;\n};\n\nexport const deleteIncomeObject = (object) => {\n  const updatedObject = { ...object };\n  updatedObject.categoriesSummary = deleteIncomeInArray(updatedObject.categoriesSummary);\n\n  return updatedObject;\n};\n\nexport const addArrayToObj = (obj, array) => {\n  const updatedObj = { ...obj };\n  updatedObj.categoriesSummary = array;\n  return updatedObj;\n};\n\nexport const addColorToArray = (summary, colorMap) => {\n  const updatedCategoriesSummary = summary.categoriesSummary.map(category => {\n    const color = colorMap[category.name];\n    if (color) {\n      return { ...category, color: color };\n    }\n    return { ...category };\n  });\n  return updatedCategoriesSummary;\n};\n\n\n","import { ChartDoughnut } from 'components/Chart/Chart';\nimport { Table } from 'components/Table/Table';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchSummary } from 'redux/summary/summaryOperationst';\nimport { selectSummary } from 'redux/summary/summarySelectors';\nimport { Wrapper, StatisticsTitle, Box } from './DiagramTab.styled';\nimport { colorMap } from './colorMap';\nimport {\n  deleteIncomeInArray,\n  addArrayToObj,\n  addColorToArray,\n} from './serviceFunctions';\n\n\nexport const DiagramTab = () => {\n  const dispatch = useDispatch();\n  const summary = useSelector(selectSummary);\n  const [renderChart, setRenderChart] = useState('');\n  const [renderTable, setRenderTable] = useState('');\n\n  const { month, year } = {\n    month: new Date().getMonth() + 1,\n    year: new Date().getFullYear(),\n  };\n\n  useEffect(() => {\n    dispatch(fetchSummary({ month, year }));\n  }, [dispatch, month, year]);\n\n  const handleFilterChange = (newMonth, newYear) => {\n    dispatch(\n      fetchSummary({\n        month: newMonth ?? month,\n        year: newYear ?? year,\n      })\n    );\n  };\n\n  useEffect(() => {\n    if (summary.length === 0 || summary === undefined) return;\n\n    const updatedCategoriesSummary = addColorToArray(summary, colorMap);\n\n    setRenderChart(deleteIncomeInArray(updatedCategoriesSummary));\n    setRenderTable(\n      addArrayToObj(summary, deleteIncomeInArray(updatedCategoriesSummary))\n    );\n  }, [summary]);\n\n  return (\n    <Wrapper>\n      <StatisticsTitle>Statistics</StatisticsTitle>\n      <Box>\n        <ChartDoughnut data={renderChart} />\n        <Table data={renderTable} handlePeriod={handleFilterChange} />\n      </Box>\n    </Wrapper>\n  );\n};\n\n","import { DiagramTab } from 'components/DiagramTab/DiagramTab'\nimport React from 'react'\n\n\nexport const SummaryPage = () => {\n  return (\n    <>\n    <DiagramTab/>\n    </>\n  )\n}\n\nexport default SummaryPage;\n","export const selectCategories = state=>state.categories.categories;\nexport const selectIsLoading = state => state.categories.isLoading;\nexport const selectError = state => state.categories.error;\n"],"names":["StyledChartContainer","styled","TotalBalance","formatNumber","number","Math","abs","toLocaleString","minimumFractionDigits","maximumFractionDigits","useGrouping","split","integerPart","fractionalPart","formatBalance","balance","formatNumberSaveMinus","ChartJS","ArcElement","Tooltip","Legend","options","plugins","legend","display","cutout","ChartDoughnut","React","data","console","log","userBalance","useSelector","selectTotalBalance","chartRef","useRef","dataChart","useMemo","length","labels","map","item","name","datasets","total","backgroundColor","color","borderWidth","hoverOffset","label","totalBalance","ref","dangerouslySetInnerHTML","__html","id","FilterMonth","getMonth","currentMonth","find","option","Date","Autocomplete","sx","width","height","borderRadius","fontFamily","background","boxShadow","backdropFilter","onChange","_","selectedOption","handleMonthChange","isOptionEqualToValue","value","renderInput","params","TextField","borderColor","FilterYear","getYear","currentYear","year","handleYearChange","useCallback","variant","Box","FiltersBox","TotalBox","overflow","alignItems","justifyContent","border","TotalItem","TotalExpenses","TotalIncom","CategoryBox","ItemTitle","ColorBox","props","tableStyle","rowStyle","cellStyle","borderBottom","padding","paddingLeft","cellColorStyle","margin","BasicTable","tableData","TableContainer","component","Paper","style","Table","maxWidth","TableBody","TableRow","TableCell","align","handlePeriod","isDataPerPeriod","expenseSummary","categoriesSummary","isLoading","selectIsLoading","getFullYear","useState","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","handleMonth","month","handleYear","useEffect","radius","wrapperStyle","wrapperClass","visible","ariaLabel","incomeSummary","selectSummary","state","summary","summaryData","Wrapper","StatisticsTitle","colorMap","Main","Car","Education","Leisure","Products","Entertainment","deleteIncomeInArray","array","filter","category","type","DiagramTab","dispatch","useDispatch","renderChart","setRenderChart","renderTable","setRenderTable","fetchSummary","undefined","updatedCategoriesSummary","addColorToArray","obj","updatedObj","addArrayToObj","newMonth","newYear","SummaryPage","selectCategories","categories"],"sourceRoot":""}