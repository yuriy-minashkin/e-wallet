{"version":3,"file":"static/js/231.be2d9385.chunk.js","mappings":"wOAEaA,EAAuBC,EAAAA,GAAAA,IAAH,kTAiBpBC,EAAeD,EAAAA,GAAAA,IAAH,uT,wCCnBlB,SAASE,EAAaC,GAC3B,IACA,EADwBC,KAAKC,IAAIF,GAAQG,eAAe,QAAS,CAACC,sBAAuB,EAAGC,sBAAuB,EAAGC,aAAa,IAC7EC,MAAM,KAA5D,eAAOC,EAAP,KAAoBC,EAApB,KACA,MAAM,GAAN,OAAUD,EAAV,YAAyBC,EAC1B,CAOM,IAAMC,EAAgB,SAACC,GAC5B,MAAM,WAAN,OANK,SAA+BX,GACpC,IACA,EADwBA,EAAOG,eAAe,QAAS,CAACC,sBAAuB,EAAGC,sBAAuB,EAAGC,aAAa,IACnEC,MAAM,KAA5D,eAAOC,EAAP,KAAoBC,EAApB,KACA,MAAM,GAAN,OAAUD,EAAV,YAAyBC,EAAkB,CAGzBG,CAAsBD,GACzC,E,UCLDE,EAAAA,GAAAA,SAAiBC,EAAAA,GAAYC,EAAAA,EAASC,EAAAA,IAEtC,I,kBAAMC,EAAU,CACdC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,OAAQ,IAGGC,EAAgBC,EAAAA,MAAW,YAAe,IAAZC,EAAW,EAAXA,KACnCC,GAAcC,EAAAA,EAAAA,aAAYC,EAAAA,IAC1BC,GAAWC,EAAAA,EAAAA,QAAO,MAElBC,GAAYC,EAAAA,EAAAA,UAAQ,WACxB,OAAIP,GAAQA,EAAKQ,OAAS,EAKjB,CACLC,OALaT,EAAKU,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAM1BC,SAAU,CACR,CACEb,KAPSA,EAAKU,KAAI,SAAAC,GAAI,OAAIlC,KAAKC,IAAIiC,EAAKG,MAAlB,IAQtBC,gBAPQf,EAAKU,KAAI,SAAAC,GAAI,OAAIA,EAAKK,KAAT,IAQrBC,YAAa,EACbC,YAAa,KAKZ,CACLT,OAAQ,CAAC,eACTI,SAAU,CACR,CACEM,MAAO,GACPnB,KAAM,CAAC,GACPe,gBAAiB,CAAC,sBAClBG,YAAa,IAKtB,GAAE,CAAClB,IAEEoB,GAAeb,EAAAA,EAAAA,UAAQ,WAC3B,OAAOrB,EAAce,EACtB,GAAE,CAACA,IAEJ,OACE,UAAC7B,EAAD,YACE,SAAC,KAAD,CAAU4B,KAAMM,EAAWb,QAASA,EAAS4B,IAAKjB,KAElD,SAAC9B,EAAD,CAAcgD,wBAAyB,CAAEC,OAAQH,OAGtD,I,8BChEYI,EAAMnD,EAAAA,GAAAA,IAAH,kPAaHoD,EAAapD,EAAAA,GAAAA,IAAH,wZAsBVqD,GAAarD,EAAAA,EAAAA,IAAOmD,EAAPnD,CAAY,CACpCsD,aAAc,OACdC,SAAU,SACVC,MAAO,QACPC,OAAQ,OACRlC,QAAS,OACTmC,WAAY,SACZC,eAAgB,SAChBjB,gBAAiB,SACjBkB,OAAQ,oBACR,4BAA6B,CAC3BJ,MAAO,SAET,6BAA8B,CAC5BA,MAAO,WAIEK,EAAW7D,EAAAA,GAAAA,IAAH,8GAOR8D,EAAY9D,EAAAA,GAAAA,IAAH,mKAQT+D,EAAgB/D,EAAAA,GAAAA,IAAH,2CAGbgE,EAAahE,EAAAA,GAAAA,IAAH,2CAGViE,EAAcjE,EAAAA,GAAAA,IAAH,8PAUXkE,EAAYlE,EAAAA,GAAAA,IAAH,mFAMTmE,EAAWnE,EAAAA,GAAAA,IAAH,qIAKC,SAAAoE,GAAK,OAAIA,EAAM1B,eAAV,IAQd2B,EAAa,CACxB3B,gBAAiB,cACjBkB,OAAQ,OACRN,aAAc,OACdgB,UAAW,QAEAC,EAAW,GAKXC,EAAY,CACvBC,aAAc,oBACdC,UAAW,iBACXlB,MAAO,QACPmB,QAAS,OACTC,YAAa,OAGFC,EAAiB,CAC5BJ,aAAc,oBACdC,UAAW,iBACXlB,MAAO,OACPsB,OAAQ,MACRH,QAAS,QC7HLvD,EAAU,CACd,CAAE0B,MAAO,UAAWiC,GAAI,GACxB,CAAEjC,MAAO,WAAYiC,GAAI,GACzB,CAAEjC,MAAO,QAASiC,GAAI,GACtB,CAAEjC,MAAO,QAASiC,GAAI,GACtB,CAAEjC,MAAO,MAAOiC,GAAI,GACpB,CAAEjC,MAAO,OAAQiC,GAAI,GACrB,CAAEjC,MAAO,OAAQiC,GAAI,GACrB,CAAEjC,MAAO,SAAUiC,GAAI,GACvB,CAAEjC,MAAO,YAAaiC,GAAI,GAC1B,CAAEjC,MAAO,UAAWiC,GAAI,IACxB,CAAEjC,MAAO,WAAYiC,GAAI,IACzB,CAAEjC,MAAO,WAAYiC,GAAI,KAGdC,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtBC,GAAehD,EAAAA,EAAAA,UAAQ,WAC3B,OAAOd,EAAQ+D,MAAK,SAAAC,GAAM,OAAIA,EAAOL,MAAO,IAAIM,MAAOJ,WAAa,CAA1C,IAA6CnC,KACxE,GAAE,IAQH,OACE,SAACwC,EAAA,EAAD,CACCC,GAAI,CAAEC,YAAa,eAClBpE,QAASA,EACTqE,SAAU,SAACC,EAAGC,GAAJ,OAVY,SAAAA,GACpBA,GACFV,EAASU,EAAeZ,GAE3B,CAMoCa,CAAkBD,EAAzC,EACVE,qBAAsB,SAACT,EAAQU,GAAT,OAAmBV,EAAOL,KAAOe,EAAMf,EAAvC,EACtBgB,YAAa,SAAAC,GAAM,OACjB,SAAC3C,EAAD,WACE,SAAC4C,EAAA,GAAD,kBAAeD,GAAf,IAAuBlD,MAAOoC,EAAcK,GAAI,CAAEC,YAAa,mBAFhD,GAOxB,ECvCKpE,EAAU,CACZ,CAAE0B,MAAO,OAAQiC,GAAI,GACrB,CAAEjC,MAAO,OAAQiC,GAAI,GACrB,CAAEjC,MAAO,OAAQiC,GAAI,GACrB,CAAEjC,MAAO,OAAQiC,GAAI,GACrB,CAAEjC,MAAO,OAAQiC,GAAI,IAGZmB,EAAa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAErBC,GAAclE,EAAAA,EAAAA,UAClB,kBAAM,IAAImD,MAAO/E,eAAe,UAAW,CAAE+F,KAAM,WAAnD,GACA,IAGIC,GAAmBC,EAAAA,EAAAA,cACvB,SAAAZ,GACE,GAAIA,EAAgB,CAClB,IAAMa,EAAeb,EAAe7C,MACpCqD,EAAQK,EACT,CACF,GACD,CAACL,IAGH,OACE,SAACb,EAAA,EAAD,CACEmB,eAAa,EACb1B,GAAG,iBACH3D,QAASA,EACTqE,SAAU,SAACC,EAAGC,GAAJ,OAAuBW,EAAiBX,EAAxC,EACVE,qBAAsB,SAACT,EAAQU,GAAT,OAAmBV,EAAOL,KAAOe,EAAMf,EAAvC,EACtBgB,YAAa,SAAAC,GAAM,OACjB,SAAC3C,EAAD,WACE,SAAC4C,EAAA,GAAD,kBAAeD,GAAf,IAAuBlD,MAAOsD,EAAaM,QAAQ,eAFpC,GAOxB,E,8DChCM,SAASC,GAAWC,GAEzB,OACE,SAACC,EAAA,EAAD,CAAgBC,UAAWC,GAAAA,EAAOC,MAAO3C,EAAzC,UACE,SAAC4C,EAAA,EAAD,CAAO1B,GAAI,CAAE2B,SAAU,IAAKtD,OAAQ,GAApC,UACE,SAACuD,EAAA,EAAD,UACGP,EAAUA,UAAUvE,KAAI,SAAA+E,GAAG,OAC1B,UAACC,GAAA,EAAD,CAAUL,MAAOzC,EAEfgB,GAAI,CAAE,mCAAoC,CAAE3B,OAAQ,IAFtD,WAIE,SAAC0D,EAAA,EAAD,CAAWN,MAAOnC,EAAlB,UACE,SAACV,EAAD,CAAUzB,gBAAiB0E,EAAIzE,WAEjC,SAAC2E,EAAA,EAAD,CAAWN,MAAOxC,EAAW+C,MAAM,OAAnC,SAA2CH,EAAI7E,QAC/C,SAAC+E,EAAA,EAAD,CAAWN,MAAOxC,EAAW+C,MAAM,QAAnC,SAA4CrH,EAAakH,EAAI3E,WAPxD2E,EAAI7E,KAFe,SAgBrC,C,8CCbY0E,GAAQ,SAAC,GAA4B,IAAD,EAAzBtF,EAAyB,EAAzBA,KAAM6F,EAAmB,EAAnBA,aACtBC,EACsB,MAA1B,OAAC9F,QAAD,IAACA,GAAAA,EAAM+F,kBAA4B,OAAJ/F,QAAI,IAAJA,GAAA,UAAAA,EAAMgG,yBAAN,eAAyBxF,QAAS,EAE7DyF,GAAY/F,EAAAA,EAAAA,aAAYgG,GAAAA,IAExB3C,GAAehD,EAAAA,EAAAA,UAAQ,kBAAM,IAAImD,MAAOJ,WAAa,CAA9B,GAAiC,IACxDmB,GAAclE,EAAAA,EAAAA,UAAQ,kBAAM,IAAImD,MAAOyC,aAAjB,GAAgC,IAE5D,GAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOvB,EAAP,KAAqB0B,EAArB,KAEMC,GAAc5B,EAAAA,EAAAA,cAAY,SAAA6B,GAC9BH,EAAiBG,EAClB,GAAE,IAEGC,GAAa9B,EAAAA,EAAAA,cAAY,SAAAF,GAC7B6B,EAAgB7B,EACjB,GAAE,IAaH,OAXAiC,EAAAA,EAAAA,YAAU,WACJN,GAAiBxB,GACnBgB,EAAaQ,EAAexB,GAC1BwB,IAAkBxB,GACpBgB,EAAaQ,EAAe5B,IACzB4B,GAAiBxB,GACpBgB,EAAatC,EAAcsB,EAG9B,GAAE,CAACwB,EAAexB,KAGjB,UAACrD,EAAD,YACE,UAACC,EAAD,YACE,SAAC4B,EAAD,CAAaC,SAAUkD,KACvB,SAACjC,EAAD,CAAYC,QAASkC,QAGvB,UAACpE,EAAD,YACE,SAACC,EAAD,uBADF,KACkC,SAACA,EAAD,qBAGjC0D,IACC,SAAC,MAAD,CACEnE,OAAO,KACPD,MAAM,KACNb,MAAM,UACN4F,OAAO,IACPC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,kBAIblB,IAAmB,SAACd,GAAD,CAAYC,UAAWjF,EAAKgG,qBAC9CF,IAAmB,SAAC,KAAD,KAErB,UAAC5D,EAAD,YACE,UAACC,EAAD,YACE,uCACA,SAACC,EAAD,UAAgB7D,EAAayB,EAAK+F,sBAEpC,UAAC5D,EAAD,YACE,oCAAgB,KAChB,SAACE,EAAD,UAAa9D,EAAayB,EAAKiH,yBAKxC,E,WC1FYC,GAAgB,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,WAAlB,ECErBC,GAAUjJ,EAAAA,GAAAA,QAAH,8TAgBPmD,GAAMnD,EAAAA,GAAAA,QAAH,gVAkBHkJ,GAAkBlJ,EAAAA,GAAAA,GAAH,qgBCpCfmJ,GAAW,CACtBC,KAAM,UACNC,IAAK,UACL,aAAc,UACd,YAAa,UACb,qBAAsB,UACtBC,UAAW,UACXC,QAAS,UACT,iBAAkB,UAClB,gBAAiB,UACjBC,SAAU,UACVC,cAAe,WCXJC,GAAsB,SAACC,GAElC,OADsBA,EAAMC,QAAO,SAAAC,GAAQ,MAAsB,WAAlBA,EAASC,IAAb,GAE5C,ECWYC,GAAa,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,eACXlB,GAAUlH,EAAAA,EAAAA,aAAYgH,IAC5B,GAAsCd,EAAAA,EAAAA,UAAS,IAA/C,eAAOmC,EAAP,KAAoBC,EAApB,KACA,GAAsCpC,EAAAA,EAAAA,UAAS,IAA/C,eAAOqC,EAAP,KAAoBC,EAApB,KAEA,EAAwB,CACtBjC,OAAO,IAAI/C,MAAOJ,WAAa,EAC/BoB,MAAM,IAAIhB,MAAOyC,eAFXM,EAAR,EAAQA,MAAO/B,EAAf,EAAeA,MAKfiC,EAAAA,EAAAA,YAAU,WACR0B,GAASM,EAAAA,GAAAA,GAAa,CAAElC,MAAAA,EAAO/B,KAAAA,IAChC,GAAE,CAAC2D,EAAU5B,EAAO/B,IAsBrB,OAXAiC,EAAAA,EAAAA,YAAU,WACR,GAAuB,IAAnBS,EAAQ5G,aAA4BoI,IAAZxB,EAA5B,CAEA,IAAMyB,EDvBqB,SAACzB,EAASI,GAQvC,OAPiCJ,EAAQpB,kBAAkBtF,KAAI,SAAAwH,GAC7D,IAAMlH,EAAQwG,EAASU,EAAStH,MAChC,OAAII,GACK,kBAAKkH,GAAZ,IAAsBlH,MAAOA,KAExB,UAAKkH,EACb,GAEF,CCcoCY,CAAgB1B,EAASI,IAE1DgB,EAAeT,GAAoBc,IACnCH,EDhCyB,SAACK,EAAKf,GACjC,IAAMgB,GAAU,UAAQD,GAExB,OADAC,EAAWhD,kBAAoBgC,EACxBgB,CACR,CC6BKC,CAAc7B,EAASW,GAAoBc,IANY,CAQ1D,GAAE,CAACzB,KAGF,UAACE,GAAD,YACE,SAACC,GAAD,0BACA,UAAC,GAAD,YACE,SAACzH,EAAD,CAAeE,KAAMuI,KACrB,SAAC,GAAD,CAAOvI,KAAMyI,EAAa5C,aAzBL,SAACqD,EAAUC,GACpCd,GACEM,EAAAA,GAAAA,GAAa,CACXlC,MAAK,OAAEyC,QAAF,IAAEA,EAAAA,EAAYzC,EACnB/B,KAAI,OAAEyE,QAAF,IAAEA,EAAAA,EAAWzE,IAGtB,SAsBF,ECtDY0E,GAAc,WACzB,OACE,+BACA,SAAChB,GAAD,KAGH,EAED,K,gFCZO,IAAMiB,EAAmB,SAAAlC,GAAK,OAAEA,EAAMmC,WAAWA,UAAnB,EACxBpD,EAAkB,SAAAiB,GAAK,OAAIA,EAAMmC,WAAWrD,SAArB,C","sources":["components/Chart/Chart.styled.js","utils/serviceFunctions.js","components/Chart/Chart.jsx","components/Table/Table.styled.js","components/Table/filterMonth.js","components/Table/filterYear.js","components/Table/basicTable.js","components/Table/Table.jsx","redux/summary/summarySelectors.js","components/DiagramTab/DiagramTab.styled.js","components/DiagramTab/colorMap.js","components/DiagramTab/serviceFunctions.js","components/DiagramTab/DiagramTab.jsx","pages/SummaryPage/SummaryPage.jsx","redux/categories/categoriesSelectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledChartContainer = styled.div`\n  position: relative;\n  width: 280px;\n  height: 280px;\n  margin: 0 auto;\n  @media screen and (min-width: 768px) {\n    margin: 0;\n    width: 336px;\n    height: 336px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 288px;\n    height: 288px;\n    margin: 0;\n  }\n`;\n\nexport const TotalBalance = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.2;\n  color: #000000;\n\n  @media screen and (min-width: 768px) {\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n","export function formatNumber(number) {\n  const formattedNumber = Math.abs(number).toLocaleString('ru-RU', {minimumFractionDigits: 2, maximumFractionDigits: 2, useGrouping: true});\n  const [integerPart, fractionalPart] = formattedNumber.split(\",\");\n  return `${integerPart}.${fractionalPart}`;\n}\n\nexport function formatNumberSaveMinus(number) {\n  const formattedNumber = number.toLocaleString('ru-RU', {minimumFractionDigits: 2, maximumFractionDigits: 2, useGrouping: true});\n  const [integerPart, fractionalPart] = formattedNumber.split(\",\");\n  return `${integerPart}.${fractionalPart}`;}\n\nexport const formatBalance = (balance) => {\n  return `&#8372; ${formatNumberSaveMinus(balance)}`;\n};\n","import React, { useMemo, useRef } from 'react';\nimport { StyledChartContainer, TotalBalance } from './Chart.styled';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useSelector } from 'react-redux';\nimport { selectTotalBalance } from 'redux/transaction/transactionSelectors';\nimport { formatBalance } from 'utils/serviceFunctions';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst options = {\n  plugins: {\n    legend: {\n      display: false,\n    },\n  },\n  cutout: 95,\n};\n\nexport const ChartDoughnut = React.memo(({ data }) => {\n  const userBalance = useSelector(selectTotalBalance);\n  const chartRef = useRef(null);\n\n  const dataChart = useMemo(() => {\n    if (data && data.length > 0) {\n      const labels = data.map(item => item.name);\n      const values = data.map(item => Math.abs(item.total));\n      const color = data.map(item => item.color);\n\n      return {\n        labels,\n        datasets: [\n          {\n            data: values,\n            backgroundColor: color,\n            borderWidth: 1,\n            hoverOffset: 1,\n          },\n        ],\n      };\n    } else {\n      return {\n        labels: ['No expenses'],\n        datasets: [\n          {\n            label: '',\n            data: [1],\n            backgroundColor: ['rgb(230, 225, 213)'],\n            hoverOffset: 4,\n          },\n        ],\n      };\n    }\n  }, [data]);\n\n  const totalBalance = useMemo(() => {\n    return formatBalance(userBalance);\n  }, [userBalance]);\n\n  return (\n    <StyledChartContainer>\n      <Doughnut data={dataChart} options={options} ref={chartRef} />\n\n      <TotalBalance dangerouslySetInnerHTML={{ __html: totalBalance }} />\n    </StyledChartContainer>\n  );\n});\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  width: 100%;\n  height: 100vh;\n  margin: 0 auto;\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    margin: 0;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 395px;\n    margin: 0;\n  }\n`;\nexport const FiltersBox = styled.div`\n  display: flex;\n  width: auto;\n  height: auto;\n  margin: 0 auto;\n  gap: 20px;\n  mix-blend-mode: 20px;\n  margin-bottom: 20px;\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    gap: 16px;\n    flex-direction: row;\n  }\n  @media screen and (min-width: 1280px) {\n    gap: 32px;\n    flex-direction: row;\n    width: 395px;\n  }\n`;\n\nexport const RoundedBox = styled(Box)({\n  borderRadius: '30px',\n  overflow: 'hidden',\n  width: '280px',\n  height: '50px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: '#fffff',\n  border: '1px solid #000000',\n  '@media (min-width: 768px)': {\n    width: '160px',\n  },\n  '@media (min-width: 1280px)': {\n    width: '152px',\n  },\n});\n\nexport const TotalBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 16px;\n  padding: 0 20px;\n`;\n\nexport const TotalItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  /* gap: 153px; */\n  font-size: 16px;\n  font-weight: 700;\n  margin-bottom: 14px;\n`;\nexport const TotalExpenses = styled.div`\n  color: #ff6596;\n`;\nexport const TotalIncom = styled.div`\n  color: #24cca7;\n`;\nexport const CategoryBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: var(--main-background-color);\n  border-radius: 30px;\n  width: 100%;\n  height: 58px;\n  background-color: var(--form-background-color);\n`;\nexport const ItemTitle = styled.div`\n  padding: 20px;\n  font-size: 18px;\n  font-weight: 700;\n`;\n// Color box styled by props color from tableData\nexport const ColorBox = styled.div`\n  width: 24px;\n  height: 24px;\n  border-radius: 2px;\n  /* margin-left: 8px; */\n  background-color: ${props => props.backgroundColor};\n`;\n\nexport const borderStyle = {\n  backgroundColor: 'transparent',\n  border: 'none',\n};\n\nexport const tableStyle = {\n  backgroundColor: 'transparent',\n  border: 'none',\n  borderRadius: 'none',\n  boxShadow: 'none',\n};\nexport const rowStyle = {\n  // padding: '0px',\n  // border: 'none',\n};\n\nexport const cellStyle = {\n  borderBottom: '1px solid #DCDCDF',\n  borderTop: '1px solid #fff',\n  width: '100px',\n  padding: '14px',\n  paddingLeft: '0px',\n};\n\nexport const cellColorStyle = {\n  borderBottom: '1px solid #DCDCDF',\n  borderTop: '1px solid #fff',\n  width: '10px',\n  margin: '0px',\n  padding: '10px',\n};\n","import { Autocomplete, TextField } from '@mui/material';\nimport React, {useMemo} from 'react';\nimport { RoundedBox } from './Table.styled';\n\nconst options = [\n  { label: 'January', id: 1 },\n  { label: 'February', id: 2 },\n  { label: 'March', id: 3 },\n  { label: 'April', id: 4 },\n  { label: 'May', id: 5 },\n  { label: 'June', id: 6 },\n  { label: 'July', id: 7 },\n  { label: 'August', id: 8 },\n  { label: 'September', id: 9 },\n  { label: 'October', id: 10 },\n  { label: 'November', id: 11 },\n  { label: 'December', id: 12 },\n];\n\nexport const FilterMonth = ({ getMonth }) => {\n  const currentMonth = useMemo(() => {\n    return options.find(option => option.id === new Date().getMonth() + 1).label;\n  }, []);\n\n  const handleMonthChange = selectedOption => {\n    if (selectedOption) {\n      getMonth(selectedOption.id);\n    }\n  };\n\n  return (\n    <Autocomplete \n     sx={{ borderColor: 'transparent' }}\n      options={options}\n      onChange={(_, selectedOption) => handleMonthChange(selectedOption)}\n      isOptionEqualToValue={(option, value) => option.id === value.id}\n      renderInput={params => (\n        <RoundedBox>\n          <TextField {...params} label={currentMonth} sx={{ borderColor: 'transparent' }} />\n        </RoundedBox>\n      )}\n    />\n  );\n};\n","import { TextField, Autocomplete } from '@mui/material';\nimport React, { useMemo, useCallback } from 'react';\nimport { RoundedBox } from './Table.styled';\n  \nconst options = [\n    { label: '2019', id: 1 },\n    { label: '2020', id: 2 },\n    { label: '2021', id: 3 },\n    { label: '2022', id: 4 },\n    { label: '2023', id: 5 },\n];\n  \nexport const FilterYear = ({ getYear }) => {\n\n  const currentYear = useMemo(\n    () => new Date().toLocaleString('default', { year: 'numeric' }),\n    []\n  );\n\n  const handleYearChange = useCallback(\n    selectedOption => {\n      if (selectedOption) {\n        const selectedYear = selectedOption.label;\n        getYear(selectedYear);\n      }\n    },\n    [getYear]\n  );\n\n  return (\n    <Autocomplete\n      disablePortal\n      id=\"combo-box-demo\"\n      options={options}\n      onChange={(_, selectedOption) => handleYearChange(selectedOption)}\n      isOptionEqualToValue={(option, value) => option.id === value.id}\n      renderInput={params => (\n        <RoundedBox>\n          <TextField {...params} label={currentYear} variant=\"outlined\" />\n        </RoundedBox>\n      )}\n    />\n  );\n};\n","import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport {ColorBox, tableStyle, rowStyle, cellStyle, cellColorStyle} from './Table.styled';\nimport { formatNumber } from 'utils/serviceFunctions';\n\n\nexport function BasicTable(tableData) {\n\n  return (\n    <TableContainer component={Paper} style={tableStyle}>\n      <Table sx={{ maxWidth: 650, border: 0 }} >\n        <TableBody >\n          {tableData.tableData.map(row => (\n            <TableRow style={rowStyle}\n              key={row.name}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell style={cellColorStyle}>\n                <ColorBox backgroundColor={row.color}></ColorBox>\n              </TableCell>\n              <TableCell style={cellStyle} align=\"left\">{row.name}</TableCell>\n              <TableCell style={cellStyle} align=\"right\">{formatNumber(row.total)}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport { FilterMonth } from 'components/Table/filterMonth';\nimport { FilterYear } from './filterYear';\nimport { BasicTable } from './basicTable';\nimport {\n  Box,\n  FiltersBox,\n  CategoryBox,\n  ItemTitle,\n  TotalBox,\n  TotalItem,\n  TotalExpenses,\n  TotalIncom,\n} from './Table.styled';\nimport { formatNumber } from 'utils/serviceFunctions';\nimport { Empty } from 'antd';\nimport { Rings } from 'react-loader-spinner';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/categories/categoriesSelectors';\n\nexport const Table = ({ data, handlePeriod }) => {\n  const isDataPerPeriod =\n    !data?.expenseSummary === 0 || data?.categoriesSummary?.length > 0;\n\n  const isLoading = useSelector(selectIsLoading);\n\n  const currentMonth = useMemo(() => new Date().getMonth() + 1, []);\n  const currentYear = useMemo(() => new Date().getFullYear(), []);\n\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [selectedYear, setSelectedYear] = useState('');\n\n  const handleMonth = useCallback(month => {\n    setSelectedMonth(month);\n  }, []);\n\n  const handleYear = useCallback(year => {\n    setSelectedYear(year);\n  }, []);\n\n  useEffect(() => {\n    if (selectedMonth && selectedYear)\n      handlePeriod(selectedMonth, selectedYear);\n    if (selectedMonth && !selectedYear)\n      handlePeriod(selectedMonth, currentYear);\n    if (!selectedMonth && selectedYear)\n      handlePeriod(currentMonth, selectedYear);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedMonth, selectedYear]);\n\n  return (\n    <Box>\n      <FiltersBox>\n        <FilterMonth getMonth={handleMonth} />\n        <FilterYear getYear={handleYear} />\n      </FiltersBox>\n\n      <CategoryBox>\n        <ItemTitle>Category</ItemTitle> <ItemTitle>Sum</ItemTitle>\n      </CategoryBox>\n      {/* Spinner when loading */}\n      {isLoading && (\n        <Rings\n          height=\"80\"\n          width=\"80\"\n          color=\"#4fa94d\"\n          radius=\"6\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n          ariaLabel=\"rings-loading\"\n        />\n      )}\n\n      {isDataPerPeriod && <BasicTable tableData={data.categoriesSummary} />}\n      {!isDataPerPeriod && <Empty />}\n\n      <TotalBox>\n        <TotalItem>\n          <p>Expenses: </p>\n          <TotalExpenses>{formatNumber(data.expenseSummary)}</TotalExpenses>\n        </TotalItem>\n        <TotalItem>\n          <p>Income: </p>{' '}\n          <TotalIncom>{formatNumber(data.incomeSummary)}</TotalIncom>\n        </TotalItem>\n      </TotalBox>\n    </Box>\n  );\n};\n","export const selectSummary = state => state.summary.summaryData;\nexport const selectIsLoadind = state => state.summary.isLoading;\nexport const selectError = state => state.summary.error;","import styled from 'styled-components';\n\nexport const Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  background: 'transparent';\n  gap: 5px;\n  padding: 43px 0 48px 0;\n\n  @media screen and (min-width: 768px) {\n    padding: 0 0 24px 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 715px;\n    padding: 174px 0 47px 69px;\n  }\n`;\nexport const Box = styled.section`\n  /* max-height: 676px; */\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  @media screen and (min-width: 480px) {\n    width: 440px;\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 100%;\n  }\n`;\n\nexport const StatisticsTitle = styled.h2`\n  font-family: var(--secondary-font);\n  font-size: 30px;\n  font-weight: 400;\n  line-height: 1.2;\n  color: var(--title-main-color);\n  margin-bottom: 8px;\n  /* margin-left: 20px;\n  margin-top: 40px; */\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 20px;\n    /* margin-left: 32px;\n    margin-top: 32px; */\n  }\n\n  @media screen and (min-width: 1280px) {\n    display: none;\n    /* margin-bottom: 20px; */\n    /* margin-left: 84px;\n    margin-top: 32px; */\n  }\n`;\n","export const colorMap = {\n  Main: '#FED057',\n  Car: '#FD9498',\n  'Child care': '#6E78E8',\n  'Self care': '#C5BAFF',\n  'Household products': '#4A56E2',\n  Education: '#81E1FF',\n  Leisure: '#24CCA7',\n  'Other expenses': '#00AD84',\n  'Main expenses': '#eba597',\n  Products: '#6973e6',\n  Entertainment: '#53daba',\n};\n","export const deleteIncomeInArray = (array) => {\n  const filteredArray = array.filter(category => category.type !== 'INCOME');\n  return filteredArray;\n};\n\nexport const deleteIncomeObject = (object) => {\n  const updatedObject = { ...object };\n  updatedObject.categoriesSummary = deleteIncomeInArray(updatedObject.categoriesSummary);\n\n  return updatedObject;\n};\n\nexport const addArrayToObj = (obj, array) => {\n  const updatedObj = { ...obj };\n  updatedObj.categoriesSummary = array;\n  return updatedObj;\n};\n\nexport const addColorToArray = (summary, colorMap) => {\n  const updatedCategoriesSummary = summary.categoriesSummary.map(category => {\n    const color = colorMap[category.name];\n    if (color) {\n      return { ...category, color: color };\n    }\n    return { ...category };\n  });\n  return updatedCategoriesSummary;\n};\n\n\n","import { ChartDoughnut } from 'components/Chart/Chart';\nimport { Table } from 'components/Table/Table';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchSummary } from 'redux/summary/summaryOperationst';\nimport { selectSummary } from 'redux/summary/summarySelectors';\nimport { Wrapper, StatisticsTitle, Box } from './DiagramTab.styled';\nimport { colorMap } from './colorMap';\nimport {\n  deleteIncomeInArray,\n  addArrayToObj,\n  addColorToArray,\n} from './serviceFunctions';\n\nexport const DiagramTab = () => {\n  const dispatch = useDispatch();\n  const summary = useSelector(selectSummary);\n  const [renderChart, setRenderChart] = useState('');\n  const [renderTable, setRenderTable] = useState('');\n\n  const { month, year } = {\n    month: new Date().getMonth() + 1,\n    year: new Date().getFullYear(),\n  };\n\n  useEffect(() => {\n    dispatch(fetchSummary({ month, year }));\n  }, [dispatch, month, year]);\n\n  const handleFilterChange = (newMonth, newYear) => {\n    dispatch(\n      fetchSummary({\n        month: newMonth ?? month,\n        year: newYear ?? year,\n      })\n    );\n  };\n\n  useEffect(() => {\n    if (summary.length === 0 || summary === undefined) return;\n\n    const updatedCategoriesSummary = addColorToArray(summary, colorMap);\n\n    setRenderChart(deleteIncomeInArray(updatedCategoriesSummary));\n    setRenderTable(\n      addArrayToObj(summary, deleteIncomeInArray(updatedCategoriesSummary))\n    );\n  }, [summary]);\n\n  return (\n    <Wrapper>\n      <StatisticsTitle>Statistics</StatisticsTitle>\n      <Box>\n        <ChartDoughnut data={renderChart} />\n        <Table data={renderTable} handlePeriod={handleFilterChange} />\n      </Box>\n    </Wrapper>\n  );\n};\n","import { DiagramTab } from 'components/DiagramTab/DiagramTab'\nimport React from 'react'\n\n\nexport const SummaryPage = () => {\n  return (\n    <>\n    <DiagramTab/>\n    </>\n  )\n}\n\nexport default SummaryPage;\n","export const selectCategories = state=>state.categories.categories;\nexport const selectIsLoading = state => state.categories.isLoading;\nexport const selectError = state => state.categories.error;\n"],"names":["StyledChartContainer","styled","TotalBalance","formatNumber","number","Math","abs","toLocaleString","minimumFractionDigits","maximumFractionDigits","useGrouping","split","integerPart","fractionalPart","formatBalance","balance","formatNumberSaveMinus","ChartJS","ArcElement","Tooltip","Legend","options","plugins","legend","display","cutout","ChartDoughnut","React","data","userBalance","useSelector","selectTotalBalance","chartRef","useRef","dataChart","useMemo","length","labels","map","item","name","datasets","total","backgroundColor","color","borderWidth","hoverOffset","label","totalBalance","ref","dangerouslySetInnerHTML","__html","Box","FiltersBox","RoundedBox","borderRadius","overflow","width","height","alignItems","justifyContent","border","TotalBox","TotalItem","TotalExpenses","TotalIncom","CategoryBox","ItemTitle","ColorBox","props","tableStyle","boxShadow","rowStyle","cellStyle","borderBottom","borderTop","padding","paddingLeft","cellColorStyle","margin","id","FilterMonth","getMonth","currentMonth","find","option","Date","Autocomplete","sx","borderColor","onChange","_","selectedOption","handleMonthChange","isOptionEqualToValue","value","renderInput","params","TextField","FilterYear","getYear","currentYear","year","handleYearChange","useCallback","selectedYear","disablePortal","variant","BasicTable","tableData","TableContainer","component","Paper","style","Table","maxWidth","TableBody","row","TableRow","TableCell","align","handlePeriod","isDataPerPeriod","expenseSummary","categoriesSummary","isLoading","selectIsLoading","getFullYear","useState","selectedMonth","setSelectedMonth","setSelectedYear","handleMonth","month","handleYear","useEffect","radius","wrapperStyle","wrapperClass","visible","ariaLabel","incomeSummary","selectSummary","state","summary","summaryData","Wrapper","StatisticsTitle","colorMap","Main","Car","Education","Leisure","Products","Entertainment","deleteIncomeInArray","array","filter","category","type","DiagramTab","dispatch","useDispatch","renderChart","setRenderChart","renderTable","setRenderTable","fetchSummary","undefined","updatedCategoriesSummary","addColorToArray","obj","updatedObj","addArrayToObj","newMonth","newYear","SummaryPage","selectCategories","categories"],"sourceRoot":""}