{"version":3,"file":"static/js/198.c8e5ee51.chunk.js","mappings":"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","sources":["components/ButtonAddTransactions/ButtonAddTransactions.jsx","components/TransactionsList/TransactionsList.jsx","redux/transaction/transactionSelectors.js","components/HomeTab/HomeTab.jsx","redux/global/globalSelectors.js","components/ModalAddTransaction/ModalAddTransaction.styled.js","components/ModalAddTransaction/ModalAddTransaction.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { openModalAddTransaction } from 'redux/global/globalSlice';\n\nexport const ButtonAddTransactions = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <button onClick={() => dispatch(openModalAddTransaction())}>Add</button>\n  );\n};\n","import { GrFormEdit } from 'react-icons/gr';\nimport {\n  deleteTransaction,\n} from 'redux/transaction/transactionOperations';\nimport { useDispatch } from 'react-redux';\n\n\nexport const TransactionsList = ({ data }) => {\n  const dispatch = useDispatch();\n  return (\n    <ul>\n      {data.map(\n        ({ id, transactionDate, type, categoryId, comment, amount }) => (\n          <li key={id}>\n            {' '}\n            {transactionDate} {type} {categoryId}\n            {comment} {amount}\n            <button >\n              <GrFormEdit />\n            </button>\n            <button onClick={() => dispatch(deleteTransaction(id))}>\n              Delete\n            </button>\n          </li>\n        )\n      )}\n    </ul>\n  );\n};\n","export const selectFinanceData = state => state.transactions.finance.data;\nexport const selectIsLoading = state => state.transactions.isLoading;\nexport const celectTotalBalance = state => state.transactions.totalBalance;\nexport const selectError = state=>state.transactions.error;\n\n","import { TransactionsList } from 'components/TransactionsList/TransactionsList';\nimport {\n  selectFinanceData,\n  selectIsLoading,\n} from 'redux/transaction/transactionSelectors';\nimport { useSelector } from 'react-redux';\nimport { fetchAllTransactions } from 'redux/transaction/transactionOperations';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Rings } from 'react-loader-spinner';\n\nexport const HomeTab = () => {\n  const financeData = useSelector(selectFinanceData);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n  console.log(financeData);\n\nconst compareData=(a, b)=> {\n  return a - b;\n}\n \nconst sortFinanceData = financeData.sort(compareData);\nconsole.log(sortFinanceData);\n\n  useEffect(() => {\n    dispatch(fetchAllTransactions());\n  }, [dispatch]);\n\n  return (\n    <>\n      {financeData.length === 0 ? (\n        <p> You don't have transactions yet. </p>\n      ) : (\n        <div>\n          {isLoading ? (\n            <Rings />\n          ) : (\n            <>\n              <p>Day Type Cotegory Comment Sum</p>\n              <TransactionsList data={financeData} />\n            </>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n","export const selectAddTransactionOpen = state=>state.global.isModalAddTransactionOpen;","import styled from \"styled-components\";\n\nexport const Overlay = styled.div`\nposition: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.25);\n    z-index: 1200;\n`\n;\n\nexport const Modal = styled.div`\nmax-width: 540px;\nwidth: 100%;\nheight: 580px;\npadding: 40px 73px 64px 40px;\nbackground-color: #FFFFFF;\nborder-radius: 20px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 40px;\n    position: relative;\n    z-index: 1200;\n`\n;\n\nexport const ModalTitle = styled.p`\nfont-family: 'Poppins';\nfont-style: normal;\nfont-weight: 400;\nfont-size: 30px;\nline-height: 45px;\ndisplay: flex;\nalign-items: center;\ntext-align: center;\ncolor: #000000;\n    \n`\n;\n\n// export const CheckboxInput = styled.input`\n// display: flex;\n//      gap: 9px;\n//      margin-top: 25px;\n//      align-items: center;\n//      justify-content: center;\n    \n// `\n// ;\n\nexport const CheckboxLabel = styled.label`\n&::before {\n    content: '';\n\n    width: 80px;\nheight: 40px;\nbackground-color: #FFFFFF;\nborder: 1px solid #E0E0E0;\nborder-radius: 30px;\n    // transition: box-shadow 250ms linear;\n\n    display: flex;\n    justify-content: center;\n    align-items: flex-end;\n    padding-bottom: 8px;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 205px;\n    top: 123px;\n    width: 44px;\n    height: 44px;\n    background-color: #24CCA7;\n    border-radius: 50px;\n    box-shadow: 0px 6px 15px rgba(36, 204, 167, 0.5);\n    transition: transform 250ms linear, background-color 250ms linear,\n    box-shadow 250ms linear;\n\n    text-align: center;\n    font-size: 10px;\n    font-weight: 500;\n    line-height: 2.8;\n    padding-top: 8px;\n    \n`\n\nexport const ModalForm = styled.form`\ndisplay: flex;\n     gap: 40px;\n     align-items: center;\n     justify-content: center;\n     flex-direction: column;\n    \n`\n;\n\nexport const ModalWrap = styled.div`\ndisplay: flex;\n     gap: 32px;\n     align-items: center;\n     justify-content: center;\n     margin-right: 32px\n    \n    \n`\n;\n\nexport const SelectLabel = styled.select`\n    width: 394px;\n    border: none;\n    border-bottom: 1px solid #E0E0E0;\n\n    font-family: 'Circe';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 18px;\n    line-height: 27px;\n\n`\n\nexport const InputLabel= styled.input`\nwidth: 190px;\nborder: none;\nborder-bottom: 1px solid #E0E0E0;\ntext-align: center;\n`\n;\n\nexport const InputLabelText= styled.input`\nwidth: 394px;\nborder: none;\nborder-bottom: 1px solid #E0E0E0;\n`\n;\n\nexport const ModalButtonWrap= styled.div`\ndisplay: flex;\n     gap: 20px;\n     align-items: center;\n     justify-content: center;\n     flex-direction: column;\n`\n;\n\nexport const ModalButtonAdd= styled.button`\nwidth: 300px;\npadding: 13px 65px 13px 71px;\nborder: none;\nbackground-color: #24CCA7;\nborder-radius: 20px;\ncolor: #FFFFFF;\n\nfont-family: 'Circe';\nfont-style: normal;\nfont-weight: 400;\nfont-size: 18px;\nline-height: 27px;\ntext-align: center;\nletter-spacing: 0.1em;\ntext-transform: uppercase;\n`\n;\n\nexport const ModalButtonCancel = styled.button`\nwidth: 300px;\npadding: 13px 65px 13px 71px;\nborder: none;\nbackground-color: #FFFFFF;\nborder: 1px solid #4A56E2;\nborder-radius: 20px;\n\nfont-family: 'Circe';\nfont-style: normal;\nfont-weight: 400;\nfont-size: 18px;\nline-height: 27px;\ntext-align: center;\nletter-spacing: 0.1em;\ntext-transform: uppercase;\ncolor: #4A56E2;\n`\n;\n\nexport const ModalButtonClose = styled.button`\nposition: absolute;\n        top: 20px;\n        right: 20px;\n        width: 32px;\n        height: 32px;\n        border: none;\n        // background-color: #fff;\n        outline: blue;\n        padding: 0;\n        cursor: pointer;\n\n        &:hover {\n          background-color: red;\n        }\n`\n;\n","import { useState } from 'react';\nimport {\n  CheckboxLabel,\n  InputLabel,\n  Modal,\n  ModalButtonCancel,\n  ModalButtonAdd,\n  ModalButtonWrap,\n  ModalForm,\n  ModalWrap,\n  Overlay,\n  InputLabelText,\n  ModalTitle,\n  SelectLabel,\n  ModalButtonClose,\n} from './ModalAddTransaction.styled';\nimport { useDispatch } from 'react-redux';\nimport { closeModalAddTransaction } from 'redux/global/globalSlice';\nimport { addTransaction } from 'redux/transaction/transactionOperations';\n\nexport const ModalAddTransaction = () => {\n  const dispatch = useDispatch();\n\n  const [transactionDate, setTransactionDate] = useState('');\n  const [type, setType] = useState('');\n  const [categoryId, setCategoryId] = useState('');\n  const [comment, setComment] = useState('');\n  const [amount, setAmount] = useState('');\n\n  const handleChange = evt => {\n    const { value, name } = evt.target;\n    if (name === 'categoryId') {\n      setCategoryId(value);\n    } else if (name === 'amount') {\n      setAmount(value);\n    } else if (name === 'transactionDate') {\n      setTransactionDate(value);\n    } else if (name === 'comment') {\n      setComment(value);\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const obj = {\n      transactionDate,\n      type,\n      categoryId,\n      comment,\n      amount,\n    };\n    console.log(obj);\n    dispatch(addTransaction(obj));\n    reset();\n  };\n\n  const reset = () => {\n    setTransactionDate('');\n    setType('');\n    setCategoryId('');\n    setComment('');\n    setAmount('');\n  };\n\n  return (\n    <Overlay >\n      <Modal>\n        <ModalButtonClose\n          type=\"button\"\n          onClick={() => dispatch(closeModalAddTransaction())}\n        >\n          {/* <svg width=\"18px\" height=\"18px\" >\n            <use href=\"${icons}#icon-vector-off\"></use>\n        </svg> */}\n        </ModalButtonClose>\n        <ModalForm onSubmit={handleSubmit}>\n          <ModalTitle> Add transaction</ModalTitle>\n          {/* <input  type=\"checkbox\" name=\"topic\" id=\"topic-1\" /> */}\n\n          <ModalWrap>\n            <p>Income</p>\n            <CheckboxLabel htmlFor=\"topic-1\"></CheckboxLabel>\n            <p>Expense</p>\n          </ModalWrap>\n          <SelectLabel\n            name=\"categoryId\"\n            onChange={handleChange}\n            value={categoryId}\n          >\n            <option>January</option>\n            <option>February</option>\n            <option>March</option>\n            <option>May</option>\n          </SelectLabel>\n\n          <ModalWrap>\n            <InputLabel\n              value={amount}\n              onChange={handleChange}\n              type=\"text\"\n              name=\"amount\"\n              placeholder=\"0.00\"\n            />\n            <InputLabel\n              value={transactionDate}\n              onChange={handleChange}\n              type=\"text\"\n              name=\"transactionDate\"\n              placeholder=\"15.02.2023\"\n            />\n          </ModalWrap>\n          <InputLabelText\n            value={comment}\n            onChange={handleChange}\n            name=\"comment\"\n            placeholder=\"Comment\"\n          />\n\n          <ModalButtonWrap>\n            <ModalButtonAdd type=\"submit\">Add</ModalButtonAdd>\n            <ModalButtonCancel type=\"button\"\n          onClick={() => dispatch(closeModalAddTransaction())}>Cancel</ModalButtonCancel>\n          </ModalButtonWrap>\n        </ModalForm>\n      </Modal>\n    </Overlay>\n  );\n};\n","import { ButtonAddTransactions } from 'components/ButtonAddTransactions/ButtonAddTransactions';\nimport { HomeTab } from 'components/HomeTab/HomeTab';\nimport { selectAddTransactionOpen } from 'redux/global/globalSelectors';\nimport { useSelector } from 'react-redux';\nimport { ModalAddTransaction } from 'components/ModalAddTransaction/ModalAddTransaction';\n// import {ModalAddTransaction} from 'components/ModalAddTransaction/ModalAddTransaction'\n\nconst HomePage = () => {\n  const isModalAddTransactionOpen = useSelector(selectAddTransactionOpen);\n\n  console.log('isModalAddTransactionOpen', isModalAddTransactionOpen);\n  return (\n    <>\n      <HomeTab />\n      <ButtonAddTransactions />\n      {isModalAddTransactionOpen && <ModalAddTransaction/>}\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["ButtonAddTransactions","dispatch","useDispatch","onClick","openModalAddTransaction","TransactionsList","data","map","id","transactionDate","type","categoryId","comment","amount","deleteTransaction","selectFinanceData","state","transactions","finance","selectIsLoading","isLoading","HomeTab","financeData","useSelector","console","log","sortFinanceData","sort","a","b","useEffect","fetchAllTransactions","length","selectAddTransactionOpen","global","isModalAddTransactionOpen","Overlay","styled","Modal","ModalTitle","CheckboxLabel","ModalForm","ModalWrap","SelectLabel","InputLabel","InputLabelText","ModalButtonWrap","ModalButtonAdd","ModalButtonCancel","ModalButtonClose","ModalAddTransaction","useState","setTransactionDate","setType","setCategoryId","setComment","setAmount","handleChange","evt","target","value","name","reset","closeModalAddTransaction","onSubmit","preventDefault","obj","addTransaction","htmlFor","onChange","placeholder"],"sourceRoot":""}